!===============================================================================
! Copyright 2001-2020 Intel Corporation.
!
! This software and the related documents are Intel copyrighted  materials,  and
! your use of  them is  governed by the  express license  under which  they were
! provided to you (License).  Unless the License provides otherwise, you may not
! use, modify, copy, publish, distribute,  disclose or transmit this software or
! the related documents without Intel's prior written permission.
!
! This software and the related documents  are provided as  is,  with no express
! or implied  warranties,  other  than those  that are  expressly stated  in the
! License.
!===============================================================================

!  Content:
!    routines for relative error calculation
!*******************************************************************************

      real(kind=4) function sfabs(a)

      real(kind=4) :: a

      if(a>=0.0) then
        sfabs=a
      else
        sfabs=-1.0*a
      endif

      end function


      real(kind=8) function dfabs(a)

      real(kind=8) :: a

      if(a>=0.0) then
        dfabs=a
      else
        dfabs=-1.0d+000*a
      endif

      if(dfabs<1e-15) then
        dfabs=1e-15
      endif

      end function


      real(kind=4) function srelerr(a,b)

      real(kind=4) :: a
      real(kind=4) :: b
      real(kind=4) :: sfabs

      srelerr=sfabs((a-b)/a)

      end function


      real(kind=8) function drelerr(a,b)

      real(kind=8) :: a
      real(kind=8) :: b
      real(kind=8) :: dfabs

      drelerr=dfabs((a-b)/a)

      end function


      real(kind=4) function crelerr(a,b)

      complex(kind=4) :: a
      complex(kind=4) :: b
      real(kind=4) :: sfabs

      real(kind=4) re
      real(kind=4) im

      re=sfabs((REAL(a)-REAL(b))/REAL(a))
      im=sfabs((AIMAG(a)-AIMAG(b))/AIMAG(a))

      if(re>=im) then
        crelerr=re
      else
        crelerr=im
      endif

      end function


      real(kind=8) function zrelerr(a,b)

      complex(kind=8) :: a
      complex(kind=8) :: b
      real(kind=8) :: dfabs

      real(kind=8) re
      real(kind=8) im

      re=dfabs((REAL(a)-REAL(b))/REAL(a))
      im=dfabs((AIMAG(a)-AIMAG(b))/AIMAG(a))

      if(re>=im) then
        zrelerr=re
      else
        zrelerr=im
      endif

      end function
